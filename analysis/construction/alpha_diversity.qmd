---
title: "Alpha Diversity"
author: "TAMUCC - Genomics Core Laboratory"
format: html
editor: visual

execute: 
  echo: true
  warning: false
---

## Analysis Setting

```{r}
min_samples_predator <- 5 #Minimum number of samples of a given predator species to keep it
inext_predator_subsample <- 5
inext_bootstraps <- 10
tree_bootstraps <- 5
tree_evolutionary_model <- 'JC'

```

## Set-up Analysis Environment

```{r}
#| warning: false
#| code-summary: "Libraries"
#| code-fold: true

library(Biostrings)
library(tidyverse)
library(iNEXT)
library(phangorn)
library(picante)
library(HierDpart)
library(ade4)
library(ggnested)
library(ggtext)
library(patchwork)

source('https://raw.githubusercontent.com/tamucc-gcl/iDIP.phylo/refs/heads/main/iDIP.phylo.R')
source(str_c(here::here(), 'r_functions/fasta2tree.R', sep = '/'))
```

## Read Filtered Data

```{r}
predator_gut_contents <- read_csv(str_c(here::here(), 
                                        'intermediate_files/filtered_zotu_counts.csv',
                                        sep = '/'),
                                  show_col_types = FALSE)

zotu_taxonomy <- read_csv(str_c(here::here(), 
                                'intermediate_files/zotu_taxonomy.csv',
                                sep = '/'),
                          show_col_types = FALSE)

predator_taxonomy <- read_rds(str_c(here::here(), 
                                    'intermediate_files/predator_taxonomy.rds',
                                    sep = '/'))


zotu_sequences <- readDNAStringSet(str_c(here::here(), 
                                         'output/rainbow_bridge/zotu_sequences.fasta',
                                         sep = '/'))

names(zotu_sequences) <- str_extract(names(zotu_sequences), 'Zotu[0-9]+')
zotu_sequences <- zotu_sequences[names(zotu_sequences) %in% colnames(predator_gut_contents)]
```

## Plot Predator Stomach Contents Composition

```{r}
MIN_NUMBER_PREDATORS_IN <- 20
sample_composition <- predator_gut_contents %>%
  pivot_longer(cols = starts_with('Zotu'),
               names_to = 'zotu',
               values_to = 'n_reads') %>%
  filter(n_reads > 0) %>%
  left_join(zotu_taxonomy,
            by = 'zotu') %>%
  mutate(across(where(is.character), 
                ~if_else(. == 'LCA_dropped', NA_character_, .))) %>%
  
  #Skip genus & species for the sake of the legend
  mutate(lowest_level = case_when(#!is.na(species) ~ str_c('s_', species),
                                  !is.na(genus) ~ str_c('g_', genus, ' sp.'),
                                  !is.na(family) ~ str_c('f_', family),
                                  !is.na(order) ~ str_c('o_', order),
                                  !is.na(class) ~ str_c('c_', class),
                                  !is.na(phylum) ~ str_c('p_', phylum),
                                  !is.na(kingdom) ~ str_c('k_', kingdom),
                                  !is.na(domain) ~ str_c('d_', domain),
                                  TRUE ~ 'Unknown'),
         upper_level = case_when(phylum == 'Chordata' & !taxid_rank %in% c('domain', 'kingdom', 'phylum') ~ str_c('c_', class),
                                 TRUE ~ str_c('p_', phylum)),
         .after = species) %>%
  
  summarise(n_reads = sum(n_reads),
            zotu = unique(zotu) %>% str_c(collapse = '; '),
            .by = c(predator_species_name, upper_level, lowest_level)) %>%
  
  #Lump together for the sake of the legend/interpretabilitu
  mutate(lowest_level = fct_lump_min(lowest_level, min = MIN_NUMBER_PREDATORS_IN),
         lowest_level = if_else(lowest_level == 'Other', 
                                str_c(lowest_level, str_remove(upper_level, '._'), sep = '_'),
                                lowest_level)) %>%
  select(-zotu) %>%
  summarise(n_reads = sum(n_reads),
            .by = where(is.character))

sample_composition %>%
  left_join(predator_taxonomy,
            by = c('predator_species_name' = 'species')) %>%
  ggnested(aes(y = predator_species_name, x = n_reads, 
               main_group = upper_level, sub_group = lowest_level),
           legend_labeling = 'sub', legend_title = 'Lowest Taxonomic\nClassification',
           main_keys = TRUE, nested_aes = c("fill"), 
           gradient_type = 'both') +
  geom_col(position = 'fill') +
  scale_x_continuous(labels = scales::percent_format()) +
  guides(fill = guide_legend(ncol = 2)) + #ncol = 5
  facet_grid(order ~ ., scales = 'free_y', space = 'free_y', switch = 'y') +
  labs(y = NULL, 
       x = 'Relative Number of Reads (%)') +
  theme_classic(base_size = 12) +
  theme(axis.title.x = element_markdown(),
        axis.title.y = element_markdown(),
        panel.background = element_rect(colour = 'black'),
        legend.position = 'right',
        legend.text = element_markdown(size = 4),
        legend.key = element_blank(),
        legend.key.size = unit(0.5, "line"),
        strip.text.y.left = element_text(angle = 0), 
        strip.background = element_blank(),
        strip.placement = "outside")

```

## Using iNEXT to determine alpha diversity

-   Account for sampling depth
-   Modern improvements to rarifaction ##TODO - In progress

```{r}
endpoint_reads <- predator_gut_contents %>%
  filter(n() >= min_samples_predator,
         .by = predator_species_name) %>%
  pivot_longer(cols = starts_with('Zotu'),
               names_to = 'zotu',
               values_to = 'n_reads') %>%
  summarise(n_reads = sum(n_reads),
            .by = sample_id) %>%
  summarise(mean_reads = mean(n_reads),
            median_reads = median(n_reads)) %>%
  pull(mean_reads) %>%
  floor()

if(!file.exists(str_c(here::here(),
                      'intermediate_files/inext_out.rds',
                      sep = '/'))){
  inext_out <- predator_gut_contents %>%
    
    filter(n() >= min_samples_predator,
           .by = predator_species_name) %>%
    
    nest(data = -c(predator_species_name)) %>%
    sample_n(inext_predator_subsample) %>%
    unnest(data) %>%
    
    select(-pool) %>%
    split(., .$predator_species_name) %>%
    map(~select(.x, -predator_species_name) %>%
          column_to_rownames('sample_id') %>%
          select(where(~sum(.) > 0)) %>%
          t) %>% 
    iNEXT(q = c(0),
          datatype = "abundance",
          nboot = inext_bootstraps,
          endpoint = endpoint_reads)
}

if(nzchar(Sys.getenv("COLAB"))){
  inext_out.rds <- read_rds(str_c(here::here(),
                                  'intermediate_files/inext_out.rds',
                                  sep = '/'))
}
```

```{r}
ggiNEXT(inext_out,
        type = 1,
        se = T,
        facet.var = "Assemblage")
```

## Phylogenetically Informed Alpha Diversity

```{r}
if(!file.exists(str_c(here::here(),
                      'intermediate_files/zotu_tree.rds',
                      sep = '/'))){
  zotu_tree <- DNAMultipleAlignment(zotu_sequences) %>% 
    msa::msaConvert("phangorn::phyDat") %>%
    fasta2tree(n_bootstraps = tree_bootstraps,
               threshold_bootstraps = floor(tree_bootstraps / 2),
               model_ml = tree_evolutionary_model)
}

if(nzchar(Sys.getenv("COLAB"))){
  zotu_tree <- read_rds(str_c(here::here(),
                              'intermediate_files/zotu_tree.rds',
                              sep = '/'))
}

```

Tree Plots

```{r}

```

## Phylogenetic Diversity

```{r}
abundance_phylogeny <- match.phylo.comm(midpoint(zotu_tree$tree), 
                                        select(predator_gut_contents, 
                                               sample_id, starts_with('Zotu')) %>%
                                          column_to_rownames('sample_id')) 

faiths_diversity <- pd(abundance_phylogeny$comm,
                       abundance_phylogeny$phy,
                       include.root = TRUE) %>%
  as_tibble(rownames = 'sample_id')

sample_pd <- predator_gut_contents %>%
  select(-starts_with('Zotu')) %>%
  mutate(phylogenetic_distance = mpd(abundance_phylogeny$comm,
                                     cophenetic.phylo(abundance_phylogeny$phy),
                                     abundance.weighted = FALSE)) %>%
  left_join(faiths_diversity,
            by = 'sample_id')
```

```{r}
rename_metrics <- as_labeller(c("PD" = "Faith's Diversity", 
                                "phylogenetic_distance" = "Phylogenetic Distance"))
sample_pd %>%
  select(-SR) %>%
  left_join(predator_taxonomy,
            by = c('predator_species_name' = 'species')) %>%
  pivot_longer(cols = c('phylogenetic_distance', 'PD'),
               names_to = 'metric',
               values_to = 'value') %>%
  filter(!is.na(value)) %>%
  ggplot(aes(y = predator_species_name, 
             x = value)) +
  stat_summary(fun.data = mean_se) +
  facet_grid(class + order ~ metric, 
             scales = 'free',
             space = 'free_y', 
             switch = 'both', 
             labeller = labeller(metric = rename_metrics)) +
  labs(x = NULL,
       y = 'Predator Species') +
  theme_classic() +
  theme(strip.background = element_blank(),
        strip.text.y.left = element_text(angle = 0), 
        strip.placement = 'outside',
        panel.background = element_rect(colour = 'black'),
        axis.text.y = element_text(face = 'italic'))
```

## Hierarchical Alpha Diversity - without Phylogenetic Information

```{r}
sampling_hierarchy <- predator_gut_contents %>%
  select(-starts_with('Zotu')) %>%
  mutate(trophic_level = "predator",
         stomach_id = str_extract(sample_id, "\\d+")) %>%
  distinct(trophic_level, predator_species_name, 
           stomach_id, pcr_id = sample_id) %>%
  t() %>%
  as.matrix()

idip_abundance <- select(predator_gut_contents,
       sample_id, starts_with('Zotu')) %>%
  column_to_rownames('sample_id') %>%
  t() 


IDIP(abun = idip_abundance,
     struc = sampling_hierarchy)
```

## Hierarchical Alpha Diversity - with Phylogenetic Information

```{r}
#Rename internal nodes to be unique (not bootstrap values) for idip.phylo
#nodes must have unique names
zotu_tree$tree$node.label <- str_c('node', 1:length(zotu_tree$tree$node.label))
  
iDIP.phylo(abun = idip_abundance,
           struc = sampling_hierarchy, 
           tree = write.tree(zotu_tree$tree))
```

## Output Results

```{r}
storage_dir <- if_else(nzchar(Sys.getenv("COLAB")), persistent_directory, here::here())
dir.create(str_c(storage_dir, 'intermediate_files', sep = '/'), showWarnings = FALSE)

write_rds(inext_out,
          str_c(storage_dir,
                'intermediate_files/inext_out.rds',
                sep = '/'))

write_rds(zotu_tree,
          str_c(storage_dir,
                'intermediate_files/zotu_tree.rds',
                sep = '/'))

write_csv(sample_pd,
          str_c(storage_dir,
                'intermediate_files/phylogenetic_alpha_diversity.csv',
                sep = '/'))
```
